//A continuación la forma de crear dos instancias de mysql en Red Hat 7 

Primeramente se debe instalar mysql de forma natural, como si fueses a instalar cualquier otro programa.
si no lo recuerdas, a continucación te dejo los pasos:

primero se descarga el programa con 
##wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm

posteriomente procedemos a la instalación usando; 
##rpm -ivh mysql-community-release-el7-5.noarch.rpm

Después tienes que instalar la mas paqueteria de complemento

##yum install mysql-server

luego enciendes la instancia;

##systemctl start mysqld

para ver si está bien cargado, usarás
##systemctl status mysqld

posteriormente habilitas la seguridad agregando un password al usuario root

##mysql_secure_installation


mysql_enable_installation use below command to see the password:
#shell > sudo grep 'temporary password' /var/log/mysqld.log



(si por alguna razon no te deja habilitar la seguridad de mysql, seguramente es por que mysql asigno una contraseña temporal, y 
hasta no saberla no podrás entrar.)

para saber que fue lo que asigno, solo hace falta ejecutar lo siguiente:


##para comprobar que la instalación se hizo correctamente, ingresas mysql -uroot -pPASSWORD

si ha sido exito nos salimos de mysql y entonces procedemos a los pasos que vienen:

PASO 1
Una vez instalado paramos el servicio de mysql usando systemctl mysql stop


PASO 2
Para este paso necesitamos “quebrar” la estructura de ficheros que se tiene por defecto, normalmente ésta es la que se tiene:

/var/lib/mysql/
Donde debería quedar algo así, siendo los numeros secuenciales que yo pongo, cambiales por cualquier otro texto o nomenclatura.

Directorio de Datos: /var/lib/mysql/???
Para el tmpdir: /var/lib/mysql/tmp/???

/var
 |
  lib--+
          |
          mysql--+
                 |
                 +--001--+
                 |       |
                 |       +--mysql
                 |
                 +--002--+
                 |       |
                 |       +--mysql
                 .
                 .
                 +--tmp--+
                         |
                         +--001
                         +--002
                         .
                         .
                         
                 
PASO 3

Copiamos todo el directorio /var/lib/mysql/mysql a cada directorio /var/lib/mysql/001 y /var/lib/mysql/002

PASO 4

En caso que existan estos ficheros, procedemos a su borrado:
si no te deja borrar usa rm -rf /var/lib/mysql/mysql

rm /var/lib/mysql/mysql
rm /var/lib/mysql/ib_logfilex
rm /var/lib/mysql/ibdata1
rm /var/lib/mysql/mysql_u~de_info
rm /var/lib/mysql/mysql-bin.index

PASO 5

Reasignar dueño de los ficheros y sus permisos correspondientes, el usuario mysql debe tener el poder completo sobre ellos.

chown -R mysql.mysql /var/lib/mysql
 
chmod 700 /var/lib/mysql/mysql //si no se puede aplicar este comando, es seguramente por que booraste la carpeta, solo generala con mkdir mysql
chmod 700 /var/lib/mysql/001
chmod 700 /var/lib/mysql/002
chmod 700 /var/lib/mysql/tmp

PASO 6

Nos queda editar manualmente el archivo de configuración de MySQL

vim /etc/mysql/my.cnf ó /etc/my.cnf   (en Ubuntu)
vim /etc/my.cnf   (en openSuSE y red hat)
En ésta sección agregamos esto:

[mysqld_multi]
mysqladmin = /usr/bin/mysqladmin
user=root
password=password-del-root-de-mysql
log = /var/lib/mysql/multilog
Luego eliminamos todo lo que hay debajo de la sección

[mysqld]
Luego por cada instancia que instalamos agregamos el siguiente bloque:

# Instancia 001
[mysqld001]
server-id       = 001
replicate-do-db = db
user            = mysql
pid-file        = /var/run/mysqld/mysqld001.pid
socket          = /var/run/mysqld/mysqld001.sock
port            = 3301
basedir         = /usr
datadir         = /var/lib/mysql/001
tmpdir          = /var/lib/mysql/tmp/001
 
thread_cache_size       = 8
myisam-recover          = BACKUP
query_cache_limit       = 1M
query_cache_size        = 16M
 
expire_logs_days        = 10
max_binlog_size         = 100M
skip-federated
skip-name-resolve
# Fin Instancia

Nota: Por cada instancia se usa un puerto distinto, es recomendable seguir una secuencia, por ejemplo, la primer instancia 3301, la segunda 3302, 3303 y así sucesivamente.

PASO 7

Ahora sólo nos queda levantar los servicios y tener en cuenta ciertos aspectos para el mantenimiento.
# levantar todas las instancias
mysqld_multi start
 
# levantar una instancia especifica, según su id
mysqld_multi start 001
 
# detener todas las instancias
mysqld_multi stop
 
# detener una instancia especifica, según su id
mysqld_multi stop 001
 
# consultar el estado de las instancias
mysqld_multi report
 
# revisar el log de las instancias
vim /var/lib/mysql/multilog

Nota: una vez configurada las instancias, ya no podremos acceder a el mediante el comando mysql -u root -p

En cambio podemos hacerlo así mysql -uroot -p --protocol=TCP -P 3301

Para poder conectarte desde otro servidor sería lo mismo pero poniendo en -h la dirección en la que se encuentra alojado la base de datos 
por ejemplo . -uroot -p -h192.168.10.12 P 3301

Además de que tienes que asegurarte de que los puertos estén escuchando con nmap...
yum install nmap
nmap localhost (te dice que puertos tienes abiertos en tu server)
y con firewall-cmd --zone=public --add-port=3301/tcp --permanent //estarás abriendo el puerto pero si no tienes habilitado FirewallD te lo va a pedor
para eso tendrás que habilitaro cion

systemctl enable firewalld
systemctl start firewalld
systemctl status firewalld

para realizar los cambios, ejecutas:
firewall-cmd --reload



Yo una ves hice el proceso me marcaba un error para levantar la instancia 001 copie nuevamente los archivos de mysql que le pertenecen
a 002 y con eso fue suficiente para mantener las dos instancias encendidas.


Referencias : http://devtroce.com/2010/01/06/configurar-varias-instancias-de-mysql-en-un-mismo-equipo/

